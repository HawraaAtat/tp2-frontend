{"ast":null,"code":"// import { createReducer, on } from '@ngrx/store';\n// import { AppState } from '../state/app.state';\n// import * as CountriesActions from '../actions/countries.actions';\n//\n// export const initialState: AppState = {\n//   countries: [],\n//   regions: {\n//     Europe: [],\n//     Asia: []\n//   }\n// };\n//\n// export const countriesReducer = createReducer(\n//   initialState,\n//   on(CountriesActions.loadCountriesSuccess, (state, { countries }) => {\n//     return { ...state, countries };\n//   }),\n//   on(CountriesActions.updateRegion, (state, { country, region }) => {\n//     const regions = { ...state.regions };\n//     const countryToUpdate = state.countries.find((c) => c.id === country.id);\n//     const oldRegion = countryToUpdate ? countryToUpdate.region : '';\n//     const countryIndex = regions[oldRegion].indexOf(country);\n//     regions[oldRegion].splice(countryIndex, 1);\n//     regions[region].push(country);\n//     return { ...state, regions };\n//   })\n// );\nimport { createReducer, on } from \"@ngrx/store\";\nimport { highlightRegion } from \"../actions/countries.actions\";\nexport const initialState = '';\n// const _highlightedRegionReducer = createReducer(\n//   initialState,\n//   on(highlightRegion, (state, { region }) => region)\n// );\nconst _highlightedRegionReducer = createReducer(initialState, on(highlightRegion, (state, {\n  region\n}) => {\n  console.log(`highlightedRegionReducer: Setting region to ${region}`);\n  return region;\n}));\nexport function highlightedRegionReducer(state = '', action) {\n  return _highlightedRegionReducer(state, action);\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAgBA,aAAa,EAAEC,EAAE,QAAO,aAAa;AACrD,SAAQC,eAAe,QAAO,8BAA8B;AAE5D,OAAO,MAAMC,YAAY,GAAG,EAAE;AAE9B;AACA;AACA;AACA;AAEA,MAAMC,yBAAyB,GAAGJ,aAAa,CAC7CG,YAAY,EACZF,EAAE,CAACC,eAAe,EAAE,CAACG,KAAK,EAAE;EAAEC;AAAM,CAAE,KAAI;EACxCC,OAAO,CAACC,GAAG,CAAC,+CAA+CF,MAAM,EAAE,CAAC;EACpE,OAAOA,MAAM;AACf,CAAC,CAAC,CACH;AAGD,OAAM,SAAUG,wBAAwB,CAACJ,QAAgB,EAAE,EAAEK,MAAc;EACzE,OAAON,yBAAyB,CAACC,KAAK,EAAEK,MAAM,CAAC;AACjD","names":["createReducer","on","highlightRegion","initialState","_highlightedRegionReducer","state","region","console","log","highlightedRegionReducer","action"],"sourceRoot":"","sources":["C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\reducers\\countries.reducer.ts"],"sourcesContent":["// import { createReducer, on } from '@ngrx/store';\r\n// import { AppState } from '../state/app.state';\r\n// import * as CountriesActions from '../actions/countries.actions';\r\n//\r\n// export const initialState: AppState = {\r\n//   countries: [],\r\n//   regions: {\r\n//     Europe: [],\r\n//     Asia: []\r\n//   }\r\n// };\r\n//\r\n// export const countriesReducer = createReducer(\r\n//   initialState,\r\n//   on(CountriesActions.loadCountriesSuccess, (state, { countries }) => {\r\n//     return { ...state, countries };\r\n//   }),\r\n//   on(CountriesActions.updateRegion, (state, { country, region }) => {\r\n//     const regions = { ...state.regions };\r\n//     const countryToUpdate = state.countries.find((c) => c.id === country.id);\r\n//     const oldRegion = countryToUpdate ? countryToUpdate.region : '';\r\n//     const countryIndex = regions[oldRegion].indexOf(country);\r\n//     regions[oldRegion].splice(countryIndex, 1);\r\n//     regions[region].push(country);\r\n//     return { ...state, regions };\r\n//   })\r\n// );\r\n\r\nimport {Action, createReducer, on} from \"@ngrx/store\";\r\nimport {highlightRegion} from \"../actions/countries.actions\";\r\n\r\nexport const initialState = '';\r\n\r\n// const _highlightedRegionReducer = createReducer(\r\n//   initialState,\r\n//   on(highlightRegion, (state, { region }) => region)\r\n// );\r\n\r\nconst _highlightedRegionReducer = createReducer(\r\n  initialState,\r\n  on(highlightRegion, (state, { region }) => {\r\n    console.log(`highlightedRegionReducer: Setting region to ${region}`);\r\n    return region;\r\n  })\r\n);\r\n\r\n\r\nexport function highlightedRegionReducer(state: string = '', action: Action) {\r\n  return _highlightedRegionReducer(state, action);\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}