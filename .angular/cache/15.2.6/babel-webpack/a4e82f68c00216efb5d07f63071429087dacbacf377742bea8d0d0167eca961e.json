{"ast":null,"code":"import { CountryMapper } from './mappers/country.mapper';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { updateRegion } from './actions/countries.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/countries.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/cdk/drag-drop\";\nfunction AppComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 5)(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const region_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkDropListConnectedTo\", ctx_r0.cards);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(region_r2);\n  }\n}\nfunction AppComponent_mat_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 7, 8);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_mat_card_4_Template_mat_card_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onDrop($event));\n    });\n    i0.ɵɵelementStart(2, \"mat-card-content\")(3, \"div\");\n    i0.ɵɵelement(4, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const country_r3 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", country_r3.flag, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", country_r3.name, \" \");\n  }\n}\nexport class AppComponent {\n  constructor(countriesService, store) {\n    this.countriesService = countriesService;\n    this.store = store;\n    this.title = 'countries-app';\n    this.regions = ['Europe', 'Asia'];\n    this.countries = [];\n  }\n  ngOnInit() {\n    this.countriesService.fetchAllCountries().subscribe(res => {\n      this.countries = CountryMapper.fromCountryDtoToCountry(res);\n    });\n  }\n  onDrop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      const country = event.item.data;\n      const region = event.container.data;\n      country.region = region;\n      this.store.dispatch(updateRegion({\n        country,\n        region\n      }));\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CountriesService), i0.ɵɵdirectiveInject(i2.Store));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"page-layout\"], [1, \"regions-container\"], [\"class\", \"region-card\", \"cdkDropList\", \"\", 3, \"cdkDropListConnectedTo\", 4, \"ngFor\", \"ngForOf\"], [1, \"cards-container\"], [\"cdkDropList\", \"\", \"cdkDrag\", \"\", 3, \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDropList\", \"\", 1, \"region-card\", 3, \"cdkDropListConnectedTo\"], [1, \"region-title\"], [\"cdkDropList\", \"\", \"cdkDrag\", \"\", 3, \"cdkDropListDropped\"], [\"cards\", \"\"], [3, \"src\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, AppComponent_mat_card_2_Template, 3, 2, \"mat-card\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, AppComponent_mat_card_4_Template, 7, 2, \"mat-card\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatCard, i4.MatCardContent, i5.CdkDropList, i5.CdkDrag],\n  styles: [\".page-layout[_ngcontent-%COMP%] {\\n  background-color: #e2e4f1;\\n  padding: 25px;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  row-gap: 25px;\\n}\\n\\n.cards-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  column-gap: 5px;\\n  row-gap: 5px;\\n  flex: auto;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex: auto;\\n  background-color: #FFFFFF;\\n  color: #000000;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 10px;\\n  align-items: center;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 25px;\\n}\\n\\n.regions-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 20px;\\n}\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%] {\\n  height: 300px;\\n  flex: auto;\\n  background-color: #FFFFFF;\\n}\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%]   .region-title[_ngcontent-%COMP%] {\\n  color: #000000;\\n  text-align: center;\\n  font-size: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFDRjs7QUFDQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUFFRjtBQUFFO0VBQ0UsYUFBQTtFQUNBLFVBQUE7RUFDQSx5QkFBQTtFQUNBLGNBQUE7QUFFSjtBQURJO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtBQUdOO0FBRk07RUFDRSxZQUFBO0FBSVI7O0FBQ0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQUVGO0FBREU7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0FBR0o7QUFGSTtFQUNFLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFJTiIsInNvdXJjZXNDb250ZW50IjpbIi5wYWdlLWxheW91dHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTJlNGYxO1xyXG4gIHBhZGRpbmc6IDI1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgcm93LWdhcDogMjVweDtcclxufVxyXG4uY2FyZHMtY29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgY29sdW1uLWdhcDogNXB4O1xyXG4gIHJvdy1nYXA6IDVweDtcclxuICBmbGV4OiBhdXRvO1xyXG4gIC8vb3ZlcmZsb3cteTogYXV0bztcclxuICAubWF0LWNhcmR7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleDogYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XHJcbiAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgIC5tYXQtY2FyZC1jb250ZW50e1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBpbWd7XHJcbiAgICAgICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbi5yZWdpb25zLWNvbnRhaW5lcntcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgY29sdW1uLWdhcDogMjBweDtcclxuICAucmVnaW9uLWNhcmR7XHJcbiAgICBoZWlnaHQ6IDMwMHB4O1xyXG4gICAgZmxleDogYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XHJcbiAgICAucmVnaW9uLXRpdGxle1xyXG4gICAgICBjb2xvcjogIzAwMDAwMDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAa,QAAQ,0BAA0B;AAExD,SAAsBC,eAAe,QAAQ,wBAAwB;AACrE,SAASC,YAAY,QAAQ,6BAA6B;;;;;;;;;ICHtDC,mCAA0G;IAC9EA,YAAU;IAAAA,iBAAM;;;;;IAD6BA,qDAAgC;IAC7EA,eAAU;IAAVA,+BAAU;;;;;;IAKtCA,sCAA6G;IAArDA;MAAAA;MAAA;MAAA,OAAsBA,oCAAc;IAAA,EAAC;IAC3FA,wCAAkB;IAEdA,yBAA0B;IAC5BA,iBAAM;IACNA,2BAAK;IACHA,YACF;IAAAA,iBAAM;;;;IAJCA,eAAoB;IAApBA,uDAAoB;IAGzBA,eACF;IADEA,gDACF;;;ADDR,OAAM,MAAOC,YAAY;EAKvBC,YACUC,gBAAkC,EAClCC,KAAsB;IADtB,qBAAgB,GAAhBD,gBAAgB;IAChB,UAAK,GAALC,KAAK;IANf,UAAK,GAAG,eAAe;IACvB,YAAO,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IAC5B,cAAS,GAAmB,EAAE;EAK3B;EAEHC,QAAQ;IACN,IAAI,CAACF,gBAAgB,CAACG,iBAAiB,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACxD,IAAI,CAACC,SAAS,GAAGZ,aAAa,CAACa,uBAAuB,CAACF,GAAG,CAAC;IAC7D,CAAC,CAAC;EACJ;EAEAG,MAAM,CAACC,KAAuB;IAC5B,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/ChB,eAAe,CACbc,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;KACF,MAAM;MACL,MAAMC,OAAO,GAAGN,KAAK,CAACO,IAAI,CAACJ,IAAI;MAC/B,MAAMK,MAAM,GAAGR,KAAK,CAACE,SAAS,CAACC,IAAI;MACnCG,OAAO,CAACE,MAAM,GAAGA,MAAM;MACvB,IAAI,CAAChB,KAAK,CAACiB,QAAQ,CAACtB,YAAY,CAAC;QAAEmB,OAAO;QAAEE;MAAM,CAAE,CAAC,CAAC;;EAE1D;;;mBA7BWnB,YAAY;AAAA;;QAAZA,YAAY;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdzB1B,8BAAyB;MAErBA,uEAEW;MACbA,iBAAM;MAENA,8BAA6B;MAC3BA,uEASW;MACbA,iBAAM;;;MAhB6CA,eAAU;MAAVA,qCAAU;MAM7BA,eAAY;MAAZA,uCAAY","names":["CountryMapper","moveItemInArray","updateRegion","i0","AppComponent","constructor","countriesService","store","ngOnInit","fetchAllCountries","subscribe","res","countries","fromCountryDtoToCountry","onDrop","event","previousContainer","container","data","previousIndex","currentIndex","country","item","region","dispatch","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.ts","C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CountriesService } from './services/countries.service';\r\nimport { CountryMapper } from './mappers/country.mapper';\r\nimport { Country } from './models/country.model';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { updateRegion } from './actions/countries.actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from './state/app.state';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'countries-app';\r\n  regions = ['Europe', 'Asia'];\r\n  countries: Array<Country> = [];\r\n\r\n  constructor(\r\n    private countriesService: CountriesService,\r\n    private store: Store<AppState>\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.countriesService.fetchAllCountries().subscribe(res => {\r\n      this.countries = CountryMapper.fromCountryDtoToCountry(res);\r\n    });\r\n  }\r\n\r\n  onDrop(event: CdkDragDrop<any>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex\r\n      );\r\n    } else {\r\n      const country = event.item.data;\r\n      const region = event.container.data;\r\n      country.region = region;\r\n      this.store.dispatch(updateRegion({ country, region }));\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-layout\">\r\n  <div class=\"regions-container\">\r\n    <mat-card class=\"region-card\" *ngFor=\"let region of regions\" cdkDropList [cdkDropListConnectedTo]=\"cards\">\r\n      <div class=\"region-title\">{{region}}</div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"cards-container\">\r\n    <mat-card *ngFor=\"let country of countries\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\" cdkDrag #cards>\r\n      <mat-card-content>\r\n        <div>\r\n          <img [src]=\"country.flag\">\r\n        </div>\r\n        <div>\r\n          {{country.name}}\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}