{"ast":null,"code":"import { CountryMapper } from \"./mappers/country.mapper\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/countries.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/cdk/drag-drop\";\nfunction AppComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 5);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_mat_card_2_Template_mat_card_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDrop($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const region_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"id\", region_r2)(\"cdkDropListData\", region_r2)(\"cdkDropListConnectedTo\", ctx_r0.getConnectedToRegions(region_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(region_r2);\n  }\n}\nfunction AppComponent_mat_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 7)(1, \"mat-card-content\")(2, \"div\");\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const country_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"cdkDragData\", country_r5)(\"cdkDragBoundary\", ctx_r1.getRegionCard(country_r5));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", country_r5.flag, i0.ɵɵsanitizeUrl)(\"alt\", country_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", country_r5.name, \" \");\n  }\n}\nexport class AppComponent {\n  constructor(countriesService) {\n    this.countriesService = countriesService;\n    this.title = 'countries-app';\n    this.regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania', 'Antarctic'];\n    this.countries = [];\n  }\n  ngOnInit() {\n    const savedCountries = localStorage.getItem('countries');\n    if (savedCountries) {\n      this.countries = JSON.parse(savedCountries);\n    } else {\n      this.countriesService.fetchAllCountries().subscribe(res => {\n        this.countries = CountryMapper.fromCountryDtoToCountry(res);\n      });\n    }\n  }\n  onDrop(event) {\n    console.log('onDrop() called');\n    const droppedCountry = event.item.data;\n    const targetRegion = event.container.data; // use event.container.data directly\n    const currentIndex = this.countries.indexOf(droppedCountry);\n    this.countries.splice(currentIndex, 1);\n    const targetRegionIndex = this.regions.indexOf(targetRegion);\n    const nextCountryIndex = this.getNextCountryIndex(targetRegionIndex, currentIndex);\n    this.countries.splice(nextCountryIndex, 0, droppedCountry);\n    localStorage.setItem('countries', JSON.stringify(this.countries));\n    // Add the following lines to highlight the region that the country belongs to\n    const regionCard = document.getElementById(targetRegion);\n    console.log(targetRegion);\n    if (regionCard) {\n      regionCard.classList.add('highlight');\n    }\n  }\n  getNextCountryIndex(regionIndex, currentIndex) {\n    let nextIndex = this.countries.length;\n    for (let i = currentIndex + 1; i < this.countries.length; i++) {\n      if (this.regions.indexOf(this.countries[i].region) > regionIndex) {\n        nextIndex = i;\n        break;\n      }\n    }\n    return nextIndex;\n  }\n  getRegionCard(country) {\n    const region = country.region;\n    return document.getElementById(region);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CountriesService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"page-layout\"], [1, \"regions-container\"], [\"class\", \"region-card\", \"cdkDropList\", \"\", 3, \"id\", \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [1, \"cards-container\"], [\"cdkDrag\", \"\", 3, \"cdkDragData\", \"cdkDragBoundary\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDropList\", \"\", 1, \"region-card\", 3, \"id\", \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [1, \"region-title\"], [\"cdkDrag\", \"\", 3, \"cdkDragData\", \"cdkDragBoundary\"], [2, \"width\", \"50px\", 3, \"src\", \"alt\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, AppComponent_mat_card_2_Template, 3, 4, \"mat-card\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, AppComponent_mat_card_4_Template, 6, 5, \"mat-card\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatCard, i3.MatCardContent, i4.CdkDropList, i4.CdkDrag],\n  styles: [\".page-layout[_ngcontent-%COMP%] {\\n  background-color: #e2e4f1;\\n  padding: 25px;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  row-gap: 25px;\\n}\\n\\n.cards-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  column-gap: 5px;\\n  row-gap: 5px;\\n  flex: auto;\\n}\\n\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex: auto;\\n  background-color: #fff;\\n  color: #000;\\n}\\n\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 10px;\\n  align-items: center;\\n}\\n\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 25px;\\n}\\n\\n.regions-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 20px;\\n}\\n\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%] {\\n  height: 300px;\\n  flex: auto;\\n  background-color: #fff;\\n}\\n\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%]   .region-title[_ngcontent-%COMP%] {\\n  color: #000;\\n  text-align: center;\\n  font-size: 20px;\\n}\\n\\n.highlight[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n\\n.region-card.highlight[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFDRjs7QUFDQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7QUFFRjs7QUFBQTtFQUNFLGFBQUE7RUFDQSxVQUFBO0VBQ0Esc0JBQUE7RUFDQSxXQUFBO0FBR0Y7O0FBREE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FBSUY7O0FBRkE7RUFDRSxZQUFBO0FBS0Y7O0FBSEE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQU1GOztBQUpBO0VBQ0UsYUFBQTtFQUNBLFVBQUE7RUFDQSxzQkFBQTtBQU9GOztBQUxBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQVFGOztBQUxBO0VBQ0Usd0JBQUE7QUFRRjs7QUFOQTtFQUNFLHdCQUFBO0FBU0YiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnZS1sYXlvdXQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlMmU0ZjE7XHJcbiAgcGFkZGluZzogMjVweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICByb3ctZ2FwOiAyNXB4O1xyXG59XHJcbi5jYXJkcy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgY29sdW1uLWdhcDogNXB4O1xyXG4gIHJvdy1nYXA6IDVweDtcclxuICBmbGV4OiBhdXRvO1xyXG59XHJcbi5jYXJkcy1jb250YWluZXIgLm1hdC1jYXJkIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXg6IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICBjb2xvcjogIzAwMDtcclxufVxyXG4uY2FyZHMtY29udGFpbmVyIC5tYXQtY2FyZCAubWF0LWNhcmQtY29udGVudCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGNvbHVtbi1nYXA6IDEwcHg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4uY2FyZHMtY29udGFpbmVyIC5tYXQtY2FyZCAubWF0LWNhcmQtY29udGVudCBpbWcge1xyXG4gIGhlaWdodDogMjVweDtcclxufVxyXG4ucmVnaW9ucy1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBjb2x1bW4tZ2FwOiAyMHB4O1xyXG59XHJcbi5yZWdpb25zLWNvbnRhaW5lciAucmVnaW9uLWNhcmQge1xyXG4gIGhlaWdodDogMzAwcHg7XHJcbiAgZmxleDogYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG59XHJcbi5yZWdpb25zLWNvbnRhaW5lciAucmVnaW9uLWNhcmQgLnJlZ2lvbi10aXRsZSB7XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLmhpZ2hsaWdodCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xyXG59XHJcbi5yZWdpb24tY2FyZC5oaWdobGlnaHQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcclxufVxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["CountryMapper","i0","AppComponent","constructor","countriesService","ngOnInit","savedCountries","localStorage","getItem","countries","JSON","parse","fetchAllCountries","subscribe","res","fromCountryDtoToCountry","onDrop","event","console","log","droppedCountry","item","data","targetRegion","container","currentIndex","indexOf","splice","targetRegionIndex","regions","nextCountryIndex","getNextCountryIndex","setItem","stringify","regionCard","document","getElementById","classList","add","regionIndex","nextIndex","length","i","region","getRegionCard","country","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.ts","C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {CountriesService} from \"./services/countries.service\";\r\nimport {CountryMapper} from \"./mappers/country.mapper\";\r\nimport {Country} from \"./models/country.model\";\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'countries-app';\r\n  regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania', 'Antarctic'];\r\n\r\n  countries: Array<Country> = [];\r\n\r\n  constructor(private countriesService: CountriesService) { }\r\n\r\n  ngOnInit() {\r\n    const savedCountries= localStorage.getItem('countries');\r\n    if (savedCountries){\r\n      this.countries = JSON.parse(savedCountries);\r\n    }\r\n    else{\r\n      this.countriesService.fetchAllCountries().subscribe(res => {\r\n        this.countries = CountryMapper.fromCountryDtoToCountry(res);\r\n      })\r\n    }\r\n  }\r\n\r\n  onDrop(event: CdkDragDrop<string>) {\r\n    console.log('onDrop() called');\r\n\r\n    const droppedCountry = event.item.data;\r\n    const targetRegion = event.container.data; // use event.container.data directly\r\n    const currentIndex = this.countries.indexOf(droppedCountry);\r\n    this.countries.splice(currentIndex, 1);\r\n    const targetRegionIndex = this.regions.indexOf(targetRegion);\r\n    const nextCountryIndex = this.getNextCountryIndex(targetRegionIndex, currentIndex);\r\n    this.countries.splice(nextCountryIndex, 0, droppedCountry);\r\n\r\n    localStorage.setItem('countries', JSON.stringify(this.countries));\r\n\r\n    // Add the following lines to highlight the region that the country belongs to\r\n    const regionCard = document.getElementById(targetRegion);\r\n    console.log(targetRegion);\r\n    if (regionCard) {\r\n      regionCard.classList.add('highlight');\r\n    }\r\n  }\r\n\r\n  getNextCountryIndex(regionIndex: number, currentIndex: number) {\r\n    let nextIndex = this.countries.length;\r\n    for (let i = currentIndex + 1; i < this.countries.length; i++) {\r\n      if (this.regions.indexOf(this.countries[i].region) > regionIndex) {\r\n        nextIndex = i;\r\n        break;\r\n      }\r\n    }\r\n    return nextIndex;\r\n  }\r\n\r\n  getRegionCard(country: Country): HTMLElement {\r\n    const region = country.region;\r\n    return document.getElementById(region) as HTMLElement;\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"page-layout\">\r\n  <div class=\"regions-container\">\r\n    <mat-card class=\"region-card\" *ngFor=\"let region of regions\" [id]=\"region\" cdkDropList [cdkDropListData]=\"region\" [cdkDropListConnectedTo]=\"getConnectedToRegions(region)\" (cdkDropListDropped)=\"onDrop($event)\">\r\n      <div class=\"region-title\">{{region}}</div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"cards-container\">\r\n    <mat-card *ngFor=\"let country of countries\" cdkDrag [cdkDragData]=\"country\" [cdkDragBoundary]=\"getRegionCard(country)\">\r\n      <mat-card-content>\r\n        <div>\r\n          <img style=\"width: 50px\" [src]=\"country.flag\" [alt]=\"country.name\">\r\n        </div>\r\n        <div>\r\n          {{country.name}}\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}