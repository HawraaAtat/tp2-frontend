{"ast":null,"code":"import { createAction, createReducer, on, props } from '@ngrx/store';\nimport { initialState } from \"../reducers/countries.reducer\";\nexport const loadCountries = createAction('[Countries] Load Countries');\nexport const loadCountriesSuccess = createAction('[Countries] Load Countries Success', props());\nexport const loadCountriesFailure = createAction('[Countries] Load Countries Failure', props());\n// export const updateRegion = createAction(\n//   '[Countries] Update Region',\n//   props<{ country: Country; region: string }>()\n// );\nexport const updateRegion = createAction('[Countries] Update Region', props());\nexport const countriesReducer = createReducer(initialState, on(updateRegion, (state, {\n  country,\n  region\n}) => {\n  const countries = [...state.countries];\n  const regions = Object.assign({}, state.regions);\n  const index = countries.findIndex(c => c.id === country.id);\n  countries[index] = Object.assign({}, country);\n  const oldRegion = country.region;\n  regions[oldRegion] = regions[oldRegion].filter(c => c.id !== country.id);\n  regions[region].push(Object.assign({}, country));\n  return Object.assign(Object.assign({}, state), {\n    countries,\n    regions\n  });\n}));","map":{"version":3,"mappings":"AAAA,SAAQA,YAAY,EAAEC,aAAa,EAAEC,EAAE,EAAEC,KAAK,QAAO,aAAa;AAElE,SAAQC,YAAY,QAAO,+BAA+B;AAE1D,OAAO,MAAMC,aAAa,GAAGL,YAAY,CAAC,4BAA4B,CAAC;AAEvE,OAAO,MAAMM,oBAAoB,GAAGN,YAAY,CAC9C,oCAAoC,EACpCG,KAAK,EAA4B,CAClC;AAED,OAAO,MAAMI,oBAAoB,GAAGP,YAAY,CAC9C,oCAAoC,EACpCG,KAAK,EAAkB,CACxB;AAED;AACA;AACA;AACA;AAEA,OAAO,MAAMK,YAAY,GAAGR,YAAY,CACtC,2BAA2B,EAC3BG,KAAK,EAAwC,CAC9C;AAED,OAAO,MAAMM,gBAAgB,GAAGR,aAAa,CAC3CG,YAAY,EACZF,EAAE,CAACM,YAAY,EAAE,CAACE,KAAK,EAAE;EAAEC,OAAO;EAAEC;AAAM,CAAE,KAAI;EAC9C,MAAMC,SAAS,GAAG,CAAC,GAAGH,KAAK,CAACG,SAAS,CAAC;EACtC,MAAMC,OAAO,qBAAQJ,KAAK,CAACI,OAAO,CAAE;EACpC,MAAMC,KAAK,GAAGF,SAAS,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,CAAC;EAC7DL,SAAS,CAACE,KAAK,CAAC,qBAAQJ,OAAO,CAAE;EACjC,MAAMQ,SAAS,GAAGR,OAAO,CAACC,MAAM;EAChCE,OAAO,CAACK,SAAS,CAAC,GAAGL,OAAO,CAACK,SAAS,CAAC,CAACC,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,CAAC;EAC1EJ,OAAO,CAACF,MAAM,CAAC,CAACS,IAAI,mBAAMV,OAAO,EAAG;EACpC,uCAAYD,KAAK;IAAEG,SAAS;IAAEC;EAAO;AACvC,CAAC,CAAC,CAGH","names":["createAction","createReducer","on","props","initialState","loadCountries","loadCountriesSuccess","loadCountriesFailure","updateRegion","countriesReducer","state","country","region","countries","regions","index","findIndex","c","id","oldRegion","filter","push"],"sourceRoot":"","sources":["C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\actions\\countries.actions.ts"],"sourcesContent":["import {createAction, createReducer, on, props} from '@ngrx/store';\r\nimport { Country } from '../models/country.model';\r\nimport {initialState} from \"../reducers/countries.reducer\";\r\n\r\nexport const loadCountries = createAction('[Countries] Load Countries');\r\n\r\nexport const loadCountriesSuccess = createAction(\r\n  '[Countries] Load Countries Success',\r\n  props<{ countries: Country[] }>()\r\n);\r\n\r\nexport const loadCountriesFailure = createAction(\r\n  '[Countries] Load Countries Failure',\r\n  props<{ error: any }>()\r\n);\r\n\r\n// export const updateRegion = createAction(\r\n//   '[Countries] Update Region',\r\n//   props<{ country: Country; region: string }>()\r\n// );\r\n\r\nexport const updateRegion = createAction(\r\n  '[Countries] Update Region',\r\n  props<{ country: Country; region: string }>()\r\n);\r\n\r\nexport const countriesReducer = createReducer(\r\n  initialState,\r\n  on(updateRegion, (state, { country, region }) => {\r\n    const countries = [...state.countries];\r\n    const regions = { ...state.regions };\r\n    const index = countries.findIndex((c) => c.id === country.id);\r\n    countries[index] = { ...country };\r\n    const oldRegion = country.region;\r\n    regions[oldRegion] = regions[oldRegion].filter((c) => c.id !== country.id);\r\n    regions[region].push({ ...country });\r\n    return { ...state, countries, regions };\r\n  })\r\n\r\n  \r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}