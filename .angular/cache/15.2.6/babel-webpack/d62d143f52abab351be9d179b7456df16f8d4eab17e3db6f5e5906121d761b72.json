{"ast":null,"code":"import { CountryMapper } from \"./mappers/country.mapper\";\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/countries.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/cdk/drag-drop\";\nconst _c0 = function () {\n  return [\"countries-drop-list\"];\n};\nfunction AppComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 5);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_mat_card_2_Template_mat_card_cdkDropListDropped_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onRegionDrop($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const region_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"cdkDropListData\", region_r2)(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction0(3, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(region_r2);\n  }\n}\nconst _c1 = function () {\n  return [\"regions-drop-list\"];\n};\nfunction AppComponent_mat_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 7);\n    i0.ɵɵlistener(\"cdkDropListDropped\", function AppComponent_mat_card_4_Template_mat_card_cdkDropListDropped_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const country_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onCountryDrop($event, country_r5));\n    });\n    i0.ɵɵelementStart(1, \"mat-card-content\")(2, \"div\");\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const country_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"cdkDropListData\", country_r5)(\"cdkDropListConnectedTo\", i0.ɵɵpureFunction0(4, _c1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", country_r5.flag, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", country_r5.name, \" \");\n  }\n}\nexport class AppComponent {\n  constructor(countriesService) {\n    this.countriesService = countriesService;\n    this.title = 'countries-app';\n    this.regions = ['Europe', 'Asia'];\n    this.countries = [];\n  }\n  ngOnInit() {\n    this.countriesService.fetchAllCountries().subscribe(res => {\n      this.countries = CountryMapper.fromCountryDtoToCountry(res);\n    });\n  }\n  onDrop(event) {\n    const prevIndex = this.countries.findIndex(item => item === event.item.data);\n    moveItemInArray(this.countries, prevIndex, event.currentIndex);\n  }\n  onCountryDrop(event, country) {\n    if (event.previousContainer === event.container) {\n      // The country was dropped in the same container, no need to do anything.\n      return;\n    }\n    // Remove the country from the countries array\n    const previousIndex = event.previousIndex;\n    this.countries.splice(previousIndex, 1);\n    // Add the country to the target region's country array\n    const targetRegion = event.container.data;\n    targetRegion.countries.push(country);\n  }\n  onRegionDrop(event) {\n    if (event.previousContainer === event.container) {\n      // The country was dropped in the same container, no need to do anything.\n      return;\n    }\n    // Remove the country from the source region's country array\n    const previousIndex = event.previousIndex;\n    const sourceRegion = event.previousContainer.data;\n    const country = sourceRegion.countries.splice(previousIndex, 1)[0];\n    // Add the country to the target region's country array\n    const targetRegion = event.container.data;\n    targetRegion.countries.push(country);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CountriesService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"page-layout\"], [1, \"regions-container\"], [\"class\", \"region-card\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [1, \"cards-container\"], [\"cdkDrag\", \"\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDropList\", \"\", 1, \"region-card\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [1, \"region-title\"], [\"cdkDrag\", \"\", \"cdkDropList\", \"\", 3, \"cdkDropListData\", \"cdkDropListConnectedTo\", \"cdkDropListDropped\"], [3, \"src\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, AppComponent_mat_card_2_Template, 3, 4, \"mat-card\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, AppComponent_mat_card_4_Template, 6, 5, \"mat-card\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.MatCard, i3.MatCardContent, i4.CdkDropList, i4.CdkDrag],\n  styles: [\".page-layout[_ngcontent-%COMP%] {\\n  background-color: #e2e4f1;\\n  padding: 25px;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100vh;\\n  row-gap: 25px;\\n}\\n\\n.cards-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  column-gap: 5px;\\n  row-gap: 5px;\\n  flex: auto;\\n  overflow-y: auto;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex: auto;\\n  background-color: #FFFFFF;\\n  color: #000000;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 10px;\\n  align-items: center;\\n}\\n.cards-container[_ngcontent-%COMP%]   .mat-card[_ngcontent-%COMP%]   .mat-card-content[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  height: 25px;\\n}\\n\\n.regions-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  column-gap: 20px;\\n}\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%] {\\n  height: 300px;\\n  flex: auto;\\n  background-color: #FFFFFF;\\n}\\n.regions-container[_ngcontent-%COMP%]   .region-card[_ngcontent-%COMP%]   .region-title[_ngcontent-%COMP%] {\\n  color: #000000;\\n  text-align: center;\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxnQkFBQTtBQUNGO0FBQ0U7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtBQUNKO0FBQ0k7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0FBQ047QUFDTTtFQUNFLFlBQUE7QUFDUjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FBRkY7QUFJRTtFQUNFLGFBQUE7RUFDQSxVQUFBO0VBQ0EseUJBQUE7QUFGSjtBQUlJO0VBQ0UsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUZOIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2UtbGF5b3V0e1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlMmU0ZjE7XHJcbiAgcGFkZGluZzogMjVweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICByb3ctZ2FwOiAyNXB4O1xyXG59XHJcblxyXG4uY2FyZHMtY29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgY29sdW1uLWdhcDogNXB4O1xyXG4gIHJvdy1nYXA6IDVweDtcclxuICBmbGV4OiBhdXRvO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcblxyXG4gIC5tYXQtY2FyZHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4OiBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcclxuICAgIGNvbG9yOiAjMDAwMDAwO1xyXG5cclxuICAgIC5tYXQtY2FyZC1jb250ZW50e1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAgICBjb2x1bW4tZ2FwOiAxMHB4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAgICAgaW1ne1xyXG4gICAgICAgIGhlaWdodDogMjVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLnJlZ2lvbnMtY29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBjb2x1bW4tZ2FwOiAyMHB4O1xyXG5cclxuICAucmVnaW9uLWNhcmR7XHJcbiAgICBoZWlnaHQ6IDMwMHB4O1xyXG4gICAgZmxleDogYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XHJcblxyXG4gICAgLnJlZ2lvbi10aXRsZXtcclxuICAgICAgY29sb3I6ICMwMDAwMDA7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAa,QAAQ,0BAA0B;AAExD,SAAsBC,eAAe,QAAQ,wBAAwB;;;;;;;;;;;;ICDjEC,mCAAmM;IAA5CA;MAAAA;MAAA;MAAA,OAAsBA,0CAAoB;IAAA,EAAC;IAChMA,8BAA0B;IAAAA,YAAU;IAAAA,iBAAM;;;;IAD6BA,2CAA0B;IACvEA,eAAU;IAAVA,+BAAU;;;;;;;;;IAKtCA,mCAAmM;IAAtDA;MAAA;MAAA;MAAA;MAAA,OAAsBA,uDAA8B;IAAA,EAAC;IAChMA,wCAAkB;IAEdA,yBAA0B;IAC5BA,iBAAM;IACNA,2BAAK;IACHA,YACF;IAAAA,iBAAM;;;;IAPsDA,4CAA2B;IAGhFA,eAAoB;IAApBA,uDAAoB;IAGzBA,eACF;IADEA,gDACF;;;ADLR,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;IAJpC,UAAK,GAAG,eAAe;IACvB,YAAO,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;IAC5B,cAAS,GAAmB,EAAE;EAE2B;EAEzDC,QAAQ;IACN,IAAI,CAACD,gBAAgB,CAACE,iBAAiB,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACxD,IAAI,CAACC,SAAS,GAAGV,aAAa,CAACW,uBAAuB,CAACF,GAAG,CAAC;IAC7D,CAAC,CAAC;EACJ;EAEAG,MAAM,CAACC,KAA6B;IAClC,MAAMC,SAAS,GAAG,IAAI,CAACJ,SAAS,CAACK,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKH,KAAK,CAACG,IAAI,CAACC,IAAI,CAAC;IAC9EhB,eAAe,CAAC,IAAI,CAACS,SAAS,EAAEI,SAAS,EAAED,KAAK,CAACK,YAAY,CAAC;EAChE;EAEAC,aAAa,CAACN,KAAuB,EAAEO,OAAgB;IACrD,IAAIP,KAAK,CAACQ,iBAAiB,KAAKR,KAAK,CAACS,SAAS,EAAE;MAC/C;MACA;;IAGF;IACA,MAAMC,aAAa,GAAGV,KAAK,CAACU,aAAa;IACzC,IAAI,CAACb,SAAS,CAACc,MAAM,CAACD,aAAa,EAAE,CAAC,CAAC;IAEvC;IACA,MAAME,YAAY,GAAGZ,KAAK,CAACS,SAAS,CAACL,IAAI;IACzCQ,YAAY,CAACf,SAAS,CAACgB,IAAI,CAACN,OAAO,CAAC;EACtC;EAEAO,YAAY,CAACd,KAAuB;IAClC,IAAIA,KAAK,CAACQ,iBAAiB,KAAKR,KAAK,CAACS,SAAS,EAAE;MAC/C;MACA;;IAGF;IACA,MAAMC,aAAa,GAAGV,KAAK,CAACU,aAAa;IACzC,MAAMK,YAAY,GAAGf,KAAK,CAACQ,iBAAiB,CAACJ,IAAI;IACjD,MAAMG,OAAO,GAAGQ,YAAY,CAAClB,SAAS,CAACc,MAAM,CAACD,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAElE;IACA,MAAME,YAAY,GAAGZ,KAAK,CAACS,SAAS,CAACL,IAAI;IACzCQ,YAAY,CAACf,SAAS,CAACgB,IAAI,CAACN,OAAO,CAAC;EACtC;;;mBA/CWjB,YAAY;AAAA;;QAAZA,YAAY;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXzB/B,8BAAyB;MAGrBA,uEAEW;MACbA,iBAAM;MAENA,8BAA8B;MAC5BA,uEASW;MACbA,iBAAM;;;MAhB6CA,eAAU;MAAVA,qCAAU;MAM7BA,eAAY;MAAZA,uCAAY","names":["CountryMapper","moveItemInArray","i0","AppComponent","constructor","countriesService","ngOnInit","fetchAllCountries","subscribe","res","countries","fromCountryDtoToCountry","onDrop","event","prevIndex","findIndex","item","data","currentIndex","onCountryDrop","country","previousContainer","container","previousIndex","splice","targetRegion","push","onRegionDrop","sourceRegion","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.ts","C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CountriesService } from \"./services/countries.service\";\r\nimport { CountryMapper } from \"./mappers/country.mapper\";\r\nimport { Country } from \"./models/country.model\";\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'countries-app';\r\n  regions = ['Europe', 'Asia'];\r\n  countries: Array<Country> = [];\r\n\r\n  constructor(private countriesService: CountriesService) {}\r\n\r\n  ngOnInit() {\r\n    this.countriesService.fetchAllCountries().subscribe(res => {\r\n      this.countries = CountryMapper.fromCountryDtoToCountry(res);\r\n    });\r\n  }\r\n\r\n  onDrop(event: CdkDragDrop<Country[]>) {\r\n    const prevIndex = this.countries.findIndex((item) => item === event.item.data);\r\n    moveItemInArray(this.countries, prevIndex, event.currentIndex);\r\n  }\r\n\r\n  onCountryDrop(event: CdkDragDrop<any>, country: Country) {\r\n    if (event.previousContainer === event.container) {\r\n      // The country was dropped in the same container, no need to do anything.\r\n      return;\r\n    }\r\n\r\n    // Remove the country from the countries array\r\n    const previousIndex = event.previousIndex;\r\n    this.countries.splice(previousIndex, 1);\r\n\r\n    // Add the country to the target region's country array\r\n    const targetRegion = event.container.data;\r\n    targetRegion.countries.push(country);\r\n  }\r\n\r\n  onRegionDrop(event: CdkDragDrop<any>) {\r\n    if (event.previousContainer === event.container) {\r\n      // The country was dropped in the same container, no need to do anything.\r\n      return;\r\n    }\r\n\r\n    // Remove the country from the source region's country array\r\n    const previousIndex = event.previousIndex;\r\n    const sourceRegion = event.previousContainer.data;\r\n    const country = sourceRegion.countries.splice(previousIndex, 1)[0];\r\n\r\n    // Add the country to the target region's country array\r\n    const targetRegion = event.container.data;\r\n    targetRegion.countries.push(country);\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"page-layout\">\r\n\r\n  <div class=\"regions-container\">\r\n    <mat-card class=\"region-card\" *ngFor=\"let region of regions\" cdkDropList [cdkDropListData]=\"region\" [cdkDropListConnectedTo]=\"['countries-drop-list']\" (cdkDropListDropped)=\"onRegionDrop($event)\">\r\n      <div class=\"region-title\">{{region}}</div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"cards-container\" >\r\n    <mat-card *ngFor=\"let country of countries\" cdkDrag cdkDropList [cdkDropListData]=\"country\" [cdkDropListConnectedTo]=\"['regions-drop-list']\" (cdkDropListDropped)=\"onCountryDrop($event, country)\">\r\n      <mat-card-content>\r\n        <div>\r\n          <img [src]=\"country.flag\">\r\n        </div>\r\n        <div>\r\n          {{country.name}}\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}