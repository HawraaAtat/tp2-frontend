{"ast":null,"code":"\"use strict\";\n\n// import {Component, OnInit} from '@angular/core';\n// import {CountriesService} from \"./services/countries.service\";\n// import {CountryMapper} from \"./mappers/country.mapper\";\n// import {Country} from \"./models/country.model\";\n// import {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\n//\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.scss']\n// })\n// export class AppComponent implements OnInit{\n//   title = 'countries-app';\n//   regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania', 'Antarctic'];\n//\n//   countries: Array<Country> = [];\n//\n//   constructor(private countriesService: CountriesService) { }\n//\n//   ngOnInit() {\n//     const savedCountries= localStorage.getItem('countries');\n//     if (savedCountries){\n//       this.countries = JSON.parse(savedCountries);\n//     }\n//     else{\n//       this.countriesService.fetchAllCountries().subscribe(res => {\n//         this.countries = CountryMapper.fromCountryDtoToCountry(res);\n//       })\n//     }\n//   }\n//\n//   onDrop(event: CdkDragDrop<string>) {\n//     console.log('onDrop() called');\n//\n//     const droppedCountry = event.item.data;\n//     const targetRegion = event.container.data; // use event.container.data directly\n//     const currentIndex = this.countries.indexOf(droppedCountry);\n//     this.countries.splice(currentIndex, 1);\n//     const targetRegionIndex = this.regions.indexOf(targetRegion);\n//     const nextCountryIndex = this.getNextCountryIndex(targetRegionIndex, currentIndex);\n//     this.countries.splice(nextCountryIndex, 0, droppedCountry);\n//\n//     localStorage.setItem('countries', JSON.stringify(this.countries));\n//\n//     // Add the following lines to highlight the region that the country belongs to\n//     const regionCard = document.getElementById(targetRegion);\n//     console.log(targetRegion);\n//     if (regionCard) {\n//       regionCard.classList.add('highlight');\n//     }\n//   }\n//\n//   getNextCountryIndex(regionIndex: number, currentIndex: number) {\n//     let nextIndex = this.countries.length;\n//     for (let i = currentIndex + 1; i < this.countries.length; i++) {\n//       if (this.regions.indexOf(this.countries[i].region) > regionIndex) {\n//         nextIndex = i;\n//         break;\n//       }\n//     }\n//     return nextIndex;\n//   }\n//\n//    getRegionCard(country: Country): HTMLElement {\n//     const region = country.region;\n//     const regionCard = document.getElementById(region) as HTMLElement;\n//\n//     // Set CSS properties for the region card\n//     // regionCard.style.backgroundColor = 'yellow';\n//\n//     return regionCard;\n//   }\n//\n//\n//   canEnterPredicate = (drag: CdkDrag, drop: CdkDropList) => {\n//     const dropRegion = drop.id;\n//     const dragRegion = drag.data.region;\n//     return dropRegion === dragRegion;\n//   }\n//\n//   //\n//   // items = ['Item 1', 'Item 2', 'Item 3'];\n//   // connectedDropLists: string = 'list-1';\n//   // onDrop(event: CdkDragDrop<string[]>) {\n//   //   moveItemInArray(this.items, event.previousIndex, event.currentIndex);\n//   //   console.log('onDrop called');\n//   // }\n//   //\n//\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["C:\\Users\\PC\\Documents\\GitHub\\tp2-frontend\\src\\app\\app.component.ts"],"sourcesContent":["// import {Component, OnInit} from '@angular/core';\r\n// import {CountriesService} from \"./services/countries.service\";\r\n// import {CountryMapper} from \"./mappers/country.mapper\";\r\n// import {Country} from \"./models/country.model\";\r\n// import {CdkDrag, CdkDragDrop, CdkDropList} from '@angular/cdk/drag-drop';\r\n//\r\n// @Component({\r\n//   selector: 'app-root',\r\n//   templateUrl: './app.component.html',\r\n//   styleUrls: ['./app.component.scss']\r\n// })\r\n// export class AppComponent implements OnInit{\r\n//   title = 'countries-app';\r\n//   regions = ['Africa', 'Americas', 'Asia', 'Europe', 'Oceania', 'Antarctic'];\r\n//\r\n//   countries: Array<Country> = [];\r\n//\r\n//   constructor(private countriesService: CountriesService) { }\r\n//\r\n//   ngOnInit() {\r\n//     const savedCountries= localStorage.getItem('countries');\r\n//     if (savedCountries){\r\n//       this.countries = JSON.parse(savedCountries);\r\n//     }\r\n//     else{\r\n//       this.countriesService.fetchAllCountries().subscribe(res => {\r\n//         this.countries = CountryMapper.fromCountryDtoToCountry(res);\r\n//       })\r\n//     }\r\n//   }\r\n//\r\n//   onDrop(event: CdkDragDrop<string>) {\r\n//     console.log('onDrop() called');\r\n//\r\n//     const droppedCountry = event.item.data;\r\n//     const targetRegion = event.container.data; // use event.container.data directly\r\n//     const currentIndex = this.countries.indexOf(droppedCountry);\r\n//     this.countries.splice(currentIndex, 1);\r\n//     const targetRegionIndex = this.regions.indexOf(targetRegion);\r\n//     const nextCountryIndex = this.getNextCountryIndex(targetRegionIndex, currentIndex);\r\n//     this.countries.splice(nextCountryIndex, 0, droppedCountry);\r\n//\r\n//     localStorage.setItem('countries', JSON.stringify(this.countries));\r\n//\r\n//     // Add the following lines to highlight the region that the country belongs to\r\n//     const regionCard = document.getElementById(targetRegion);\r\n//     console.log(targetRegion);\r\n//     if (regionCard) {\r\n//       regionCard.classList.add('highlight');\r\n//     }\r\n//   }\r\n//\r\n//   getNextCountryIndex(regionIndex: number, currentIndex: number) {\r\n//     let nextIndex = this.countries.length;\r\n//     for (let i = currentIndex + 1; i < this.countries.length; i++) {\r\n//       if (this.regions.indexOf(this.countries[i].region) > regionIndex) {\r\n//         nextIndex = i;\r\n//         break;\r\n//       }\r\n//     }\r\n//     return nextIndex;\r\n//   }\r\n//\r\n//    getRegionCard(country: Country): HTMLElement {\r\n//     const region = country.region;\r\n//     const regionCard = document.getElementById(region) as HTMLElement;\r\n//\r\n//     // Set CSS properties for the region card\r\n//     // regionCard.style.backgroundColor = 'yellow';\r\n//\r\n//     return regionCard;\r\n//   }\r\n//\r\n//\r\n//   canEnterPredicate = (drag: CdkDrag, drop: CdkDropList) => {\r\n//     const dropRegion = drop.id;\r\n//     const dragRegion = drag.data.region;\r\n//     return dropRegion === dragRegion;\r\n//   }\r\n//\r\n//   //\r\n//   // items = ['Item 1', 'Item 2', 'Item 3'];\r\n//   // connectedDropLists: string = 'list-1';\r\n//   // onDrop(event: CdkDragDrop<string[]>) {\r\n//   //   moveItemInArray(this.items, event.previousIndex, event.currentIndex);\r\n//   //   console.log('onDrop called');\r\n//   // }\r\n//   //\r\n//\r\n// }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}